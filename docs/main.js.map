{"version":3,"sources":["fs (ignored)","crypto (ignored)","stream (ignored)","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/input-data/input-data.component.ts","./src/app/input-data/input-data.component.html","./src/app/app-routing.module.ts","./src/app/models/user-logs.ts","./src/app/models/before-after.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* (ignored) */","/* (ignored) */","/* (ignored) */","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'tibia-heal-project';\n}\n","<div>\n  <app-input-data></app-input-data>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { InputDataComponent } from './input-data/input-data.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InputDataComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UserLogs } from '../models/user-logs';\nimport * as XLSX from 'xlsx';\nimport { BeforeAfter } from '../models/before-after';\n\n@Component({\n  selector: 'app-input-data',\n  templateUrl: './input-data.component.html',\n  styleUrls: ['./input-data.component.scss']\n})\nexport class InputDataComponent implements OnInit {\n  fileName= 'ExcelSheet.xlsx';\n  userLogs:UserLogs = new UserLogs();\n  submitted = false;\n  beforeAfter:Array<BeforeAfter> = [];\n  exurasio:boolean=false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() { this.submitted = true; }\n\n  parseLogs() {\n    this.userLogs.healings=[];\n    let rep=this.userLogs.logs.replace(/^[0-9]{2}:[0-9]{2} ([^Y]|Y[^o]|Yo[^u]|You[^ ]|You [^h]|You h[^e]|You he[^a]).*/mg,\"\");\n    rep = rep.replace(/^([A-Za-z].*)/mg,\"\");\n\n    rep = rep.replace(/^[0-9]{2}:[0-9]{2} You heal yourself for ([0-9]+) hitpoints./mg,\"$1\");\n\n    const regex = /[0-9]+/g;\n    let m;\n    let currentHeal:number=0;\n    while ((m = regex.exec(rep)) !== null) {\n        if (m.index === regex.lastIndex) {\n            regex.lastIndex++;\n        }\n\n        m.forEach((match) => {\n            currentHeal=Number(match);\n\n            if(currentHeal>this.userLogs.healMax) {\n              this.userLogs.healMax=currentHeal;\n            }\n            if(currentHeal<this.userLogs.healMin) {\n              this.userLogs.healMin=currentHeal;\n            }\n            this.userLogs.healSum+= currentHeal;\n            this.userLogs.healings.push(currentHeal);\n        });\n    }\n\n  }\n\n  generateTable() {\n    this.parseLogs();\n    this.parseLogs2();\n    let qtdRegs = this.userLogs.healings.length>this.userLogs.healings2.length?this.userLogs.healings.length:this.userLogs.healings2.length;\n    for (let i=0 ; i < qtdRegs; i++) {\n      let ba:BeforeAfter=new BeforeAfter();\n      if(this.userLogs.healings.length>i) {\n        ba.before = this.userLogs.healings[i];\n      }\n      if(this.userLogs.healings2.length>i) {\n        ba.after = this.userLogs.healings2[i];\n      }\n      this.beforeAfter.push(ba);\n    }\n  }\n\n  parseLogs2() {\n    this.userLogs.healings2=[];\n    let rep=this.userLogs.logs2.replace(/^[0-9]{2}:[0-9]{2} ([^Y]|Y[^o]|Yo[^u]|You[^ ]|You [^h]|You h[^e]|You he[^a]).*/mg,\"\");\n    rep = rep.replace(/^([A-Za-z].*)/mg,\"\");\n\n    if(this.exurasio){\n      rep = rep.replace(/^[0-9]{2}:[0-9]{2} You heal [A-Za-z ]+ for ([0-9]+) hitpoints./mg,\"$1\");\n    } else {\n      rep = rep.replace(/^[0-9]{2}:[0-9]{2} You heal yourself for ([0-9]+) hitpoints./mg,\"$1\");\n    }\n\n    const regex = /[0-9]+/g;\n    let m;\n    let currentHeal:number=0;\n    while ((m = regex.exec(rep)) !== null) {\n        if (m.index === regex.lastIndex) {\n            regex.lastIndex++;\n        }\n\n        m.forEach((match) => {\n            currentHeal=Number(match);\n\n            if(currentHeal>this.userLogs.healMax2) {\n              this.userLogs.healMax2=currentHeal;\n            }\n            if(currentHeal<this.userLogs.healMin2) {\n              this.userLogs.healMin2=currentHeal;\n            }\n            this.userLogs.healSum2+= currentHeal;\n            this.userLogs.healings2.push(currentHeal);\n        });\n    }\n\n  }\n\n  getAvg():number {\n    if(this.userLogs.healSum>0) {\n      return (this.userLogs.healSum / this.userLogs.healings.length).toFixed(2) as any;\n    }\n    return Number(0);\n  }\n\n  getAvg2():number {\n    if(this.userLogs.healSum2>0) {\n      return (this.userLogs.healSum2 / this.userLogs.healings2.length).toFixed(2) as any;\n    }\n    return Number(0);\n  }\n\n  exportExcel() {\n    this.fileName=this.userLogs.userName+\"_\"+this.userLogs.spellName+\"_\"+\"_lvl_\"+this.userLogs.level+\".xlsx\";\n    /* table id is passed over here */\n    let element = document.getElementById('excel-table');\n    const ws: XLSX.WorkSheet =XLSX.utils.table_to_sheet(element);\n\n    /* generate workbook and add the worksheet */\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n\n    /* save to file */\n    XLSX.writeFile(wb, this.fileName);\n  }\n\n\n}\n","<div class=\"form-group\">\n  <label for=\"mlvl\">Nome do Personagem</label>\n  <input type=\"text\" id=\"nome\" name=\"nome\" [(ngModel)]=\"userLogs.userName\" #nome=\"ngModel\">\n</div>\n<div class=\"form-group\">\n  <label for=\"mlvl\">Nome Magia</label>\n  <input type=\"text\" id=\"nome\" name=\"nome\" [(ngModel)]=\"userLogs.spellName\" #nome=\"ngModel\">\n  <input type=\"checkbox\" id=\"exurasio\" name=\"exurasio\" [(ngModel)]=\"exurasio\">\n  <label for=\"exurasio\">é exura sio</label>\n</div>\n<div class=\"form-group\">\n  <label for=\"level\">Level</label>\n  <input type=\"text\" id=\"level\" name=\"level\" [(ngModel)]=\"userLogs.level\" #level=\"ngModel\">\n</div>\n<div id=\"wrapper\">\n  <div id=\"left\">\n    <div>\n      <div>\n        <p>Neste bloco você testará o healing do personagem sem utilizar itens que aumentem o seu magic level</p>\n      <div class=\"form-group\">\n        <label for=\"mlvl\">Magic Level</label>\n        <input type=\"text\" id=\"mlvl\" name=\"mlvl\" [(ngModel)]=\"userLogs.mlvl\" #mlvl=\"ngModel\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"logs\">Cole os logs abaixo:</label>\n        <br>\n        <textarea class=\"logs-output\" id=\"logs\" name=\"logs\" [(ngModel)]=\"userLogs.logs\">\n        </textarea>\n      </div>\n    </div>\n    </div>\n  </div>\n  <div id=\"right\">\n    <div>\n      <div>\n      <p>Neste bloco voce deverá testar as curas do seu personagem utilizando itens adicionando magic level.</p>\n      <div class=\"form-group\">\n        <label for=\"mlvl\">Magic Level</label>\n        <input type=\"text\" id=\"mlvl\" name=\"mlvl\" [(ngModel)]=\"userLogs.mlvl2\" #mlvl=\"ngModel\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"logs\">Cole os logs abaixo:</label>\n        <br>\n        <textarea class=\"logs-output\" id=\"logs\" name=\"logs\" [(ngModel)]=\"userLogs.logs2\">\n        </textarea>\n      </div>\n    </div>\n    </div>\n  </div>\n</div>\n<button class=\"btn btn-primary\" (click)=\"generateTable()\">Gerar</button>\n  <button class=\"btn btn-primary\" (click)=\"exportExcel()\">Gerar Excel</button>\n  <p>\n    Heals\n  </p>\n  <table id=\"excel-table\">\n    <tr>\n      <td>\n        Healing Máximo - ml {{this.userLogs.mlvl}}\n      </td>\n      <td>\n        Healing Mínimo - ml {{this.userLogs.mlvl}}\n      </td>\n      <td>\n        Healing Médio - ml {{this.userLogs.mlvl}}\n      </td>\n      <td>\n        Qtd. Heals - ml {{this.userLogs.mlvl}}\n      </td>\n      <td>\n        Healing Máximo - ml {{this.userLogs.mlvl2}}\n      </td>\n      <td>\n        Healing Mínimo - ml {{this.userLogs.mlvl2}}\n      </td>\n      <td>\n        Healing Médio - ml {{this.userLogs.mlvl2}}\n      </td>\n      <td>\n        Qtd. Heals - ml {{this.userLogs.mlvl2}}\n      </td>\n    </tr>\n    <tr>\n      <td>\n        {{userLogs.healMax}}\n      </td>\n      <td>\n        {{userLogs.healMin}}\n      </td>\n      <td>\n        {{getAvg()}}\n      </td>\n      <td>\n        {{userLogs.healings.length}}\n      </td>\n      <td>\n        {{userLogs.healMax2}}\n      </td>\n      <td>\n        {{userLogs.healMin2}}\n      </td>\n      <td>\n        {{getAvg2()}}\n      </td>\n      <td>\n        {{userLogs.healings2.length}}\n      </td>\n    </tr>\n    <tr>\n      <td colspan=\"2\">Diferença ml</td>\n      <td colspan=\"3\">Cura minima por ml</td>\n      <td colspan=\"3\">Cura máxima por ml</td>\n    </tr>\n    <tr>\n      <td colspan=\"2\">{{this.userLogs.mlvl2 - this.userLogs.mlvl}}</td>\n      <td colspan=\"3\">{{(userLogs.healMin2 - userLogs.healMin)/(this.userLogs.mlvl2 - this.userLogs.mlvl)}}</td>\n      <td colspan=\"3\">{{(userLogs.healMax2 - userLogs.healMax)/(this.userLogs.mlvl2 - this.userLogs.mlvl)}}</td>\n    </tr>\n    <tr>\n      <td colspan=\"8\" style=\"text-align: center;\"> Healing History</td>\n    </tr>\n    <tr *ngFor=\"let healing of beforeAfter\">\n        <td colspan=\"4\">{{ healing.before }}</td>\n        <td colspan=\"4\">{{ healing.after }}</td>\n    </tr>\n  </table>\n\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export class UserLogs {\n  public userName:string =\"\";\n  public spellName:string =\"\";\n  public level:number=0;\n  public mlvl:number=0;\n  public logs:string=\"\";\n  public healings:Array<number>=[];\n  public healMin:number=9999;\n  public healSum:number=0;\n  public healMax:number=0;\n\n  public mlvl2:number=0;\n  public logs2:string=\"\";\n  public healings2:Array<number>=[];\n  public healMin2:number=9999;\n  public healSum2:number=0;\n  public healMax2:number=0;\n}\n","export class BeforeAfter {\n  public before:number=0;\n  public after:number=0;\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}